@article{leite_survey_2020,
	title = {A {Survey} of {DevOps} {Concepts} and {Challenges}},
	volume = {52},
	issn = {0360-0300, 1557-7341},
	doi = {10.1145/3359981},
	abstract = {DevOpsis a collaborative and multidisciplinary organizational effort to automate continuous delivery of new software updates while guaranteeing their correctness and reliability. The present survey investigates and discusses DevOps challenges from the perspective of engineers, managers, and researchers. We review the literature and develop a DevOps conceptual map, correlating the DevOps automation tools with these concepts. We then discuss their practical implications for engineers, managers, and researchers. Finally, we critically explore some of the most relevant DevOps challenges reported by the literature.},
	language = {en},
	number = {6},
	journal = {ACM Computing Surveys},
	author = {Leite, Leonardo and Rocha, Carla and Kon, Fabio and Milojicic, Dejan and Meirelles, Paulo},
	month = nov,
	year = {2020},
}

@article{sorgalla_applying_2021,
	title = {Applying {Model}-{Driven} {Engineering} to {Stimulate} the {Adoption} of {DevOps} {Processes} in {Small} and {Medium}-{Sized} {Development} {Organizations}},
	volume = {2},
	issn = {2661-8907},
	doi = {10.1007/s42979-021-00825-z},
	abstract = {Microservice architecture (MSA) denotes an increasingly popular architectural style in which business capabilities are wrapped into autonomously developable and deployable software components called microservices. Microservice applications are developed by multiple DevOps teams each owning one or more services. In this article, we explore the state of how DevOps teams in small and medium-sized organizations (SMOs) cope with MSA and how they can be supported. We show through a secondary analysis of an exploratory interview study comprising six cases, that the organizational and technological complexity resulting from MSA poses particular challenges for small and medium-sized organizations (SMOs). We apply model-driven engineering to address these challenges. As results of the second analysis, we identify the challenge areas of building and maintaining a common architectural understanding, and dealing with deployment technologies. To support DevOps teams of SMOs in coping with these challenges, we present a model-driven workflow based on LEMMA—the Language Ecosystem for Modeling Microservice Architecture. To implement the workflow, we extend LEMMA with the functionality to (i) generate models from API documentation; (ii) reference remote models owned by other teams; (iii) generate deployment specifications; and (iv) generate a visual representation of the overall architecture. We validate the model-driven workflow and our extensions to LEMMA through a case study showing that the added functionality to LEMMA can bring efficiency gains for DevOps teams. To develop best practices for applying our workflow to maximize efficiency in SMOs, we plan to conduct more empirical research in the field in the future.},
	language = {en},
	number = {6},
	journal = {SN Computer Science},
	author = {Sorgalla, Jonas and Wizenty, Philip and Rademacher, Florian and Sachweh, Sabine and Zündorf, Albert},
	month = sep,
	year = {2021},
	keywords = {Development process, DevOps, Microservice architecture, Model-driven engineering},
}

@inproceedings{colantoni_devopsml_2020,
	address = {Virtual Event Canada},
	title = {{DevOpsML}: towards modeling {DevOps} processes and platforms},
	isbn = {978-1-4503-8135-2},
	doi = {10.1145/3417990.3420203},
	language = {en},
	urldate = {2023-04-14},
	booktitle = {Proceedings of the 23rd {ACM}/{IEEE} {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems}: {Companion} {Proceedings}},
	publisher = {ACM},
	author = {Colantoni, Alessandro and Berardinelli, Luca and Wimmer, Manuel},
	month = oct,
	year = {2020},
}

@article{ferry_cloudmf_2018,
	title = {{CloudMF}: {Model}-{Driven} {Management} of {Multi}-{Cloud} {Applications}},
	volume = {18},
	issn = {1533-5399, 1557-6051},
	shorttitle = {{CloudMF}},
	doi = {10.1145/3125621},
	abstract = {While the number of cloud solutions is continuously increasing, the development and operation of large-scale and distributed cloud applications are still challenging. A major challenge is the lack of interoperability between the existing cloud solutions, which increases the complexity of maintaining and evolving complex applications potentially deployed across multiple cloud infrastructures and platforms. In this article, we show how the Cloud Modelling Framework leverages model-driven engineering and supports the DevOps ideas to tame this complexity by providing:
              (i)
              a domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and
              (ii)
              a models@run-time environment for their continuous provisioning, deployment, and adaptation.},
	language = {en},
	number = {2},
	journal = {ACM Transactions on Internet Technology},
	author = {Ferry, Nicolas and Chauvel, Franck and Song, Hui and Rossini, Alessandro and Lushpenko, Maksym and Solberg, Arnor},
	month = may,
	year = {2018},
}


@inproceedings{anjorin_families_2017,
	address = {Marburg, Germany},
	title = {The {Families} to {Persons} {Case}},
	volume = {2026},
	url = {http://ceur-ws.org/Vol-2026/paper2.pdf},
	abstract = {The Families to Persons case is a well-known example problem for bidirectional transformations. This paper proposes an implementation of this case within the recently developed Benchmarx framework [2], based on previous conceptual work [1].},
	language = {en},
	booktitle = {Proceedings of the 10th {Transformation} {Tool} {Contest}},
	publisher = {CEUR-WS.org},
	author = {Anjorin, Anthony and Buchmann, Thomas and Westfechtel, Bernhard},
	month = jul,
	year = {2017},
	pages = {27--34},
	file = {Anjorin et al. - The Families to Persons Case.pdf:/home/agd516/Zotero/storage/F29LELN9/Anjorin et al. - The Families to Persons Case.pdf:application/pdf},
}

@article{anjorin_benchmarking_2020,
	title = {Benchmarking bidirectional transformations: theory, implementation, application, and assessment},
	volume = {19},
	issn = {1619-1374},
	shorttitle = {Benchmarking bidirectional transformations},
	doi = {10.1007/s10270-019-00752-x},
	abstract = {Bidirectional transformations (bx) are relevant for a wide range of application domains. While bx problems may be solved with unidirectional languages and tools, maintaining separate implementations of forward and backward synchronizers with mutually consistent behavior can be difficult, laborious, and error-prone. To address the challenges involved in handling bx problems, dedicated languages and tools for bx have been developed. Due to their heterogeneity, however, the numerous and diverse approaches to bx are difficult to compare, with the consequence that fundamental differences and similarities are not yet well understood. This motivates the need for suitable benchmarks that facilitate the comparison of bx approaches. This paper provides a comprehensive treatment of benchmarking bx, covering theory, implementation, application, and assessment. At the level of theory, we introduce a conceptual framework that defines and classifies architectures of bx tools. At the level of implementation, we describe Benchmarx, an infrastructure for benchmarking bx tools which is based on the conceptual framework. At the level of application, we report on a wide variety of solutions to the well-known Families-to-Persons benchmark, which were developed and compared with the help of Benchmarx. At the level of assessment, we reflect on the usefulness of the Benchmarx approach to benchmarking bx, based on the experiences gained from the Families-to-Persons benchmark.},
	language = {en},
	number = {3},
	journal = {Software and Systems Modeling},
	author = {Anjorin, Anthony and Buchmann, Thomas and Westfechtel, Bernhard and Diskin, Zinovy and Ko, Hsiang-Shang and Eramo, Romina and Hinkel, Georg and Samimi-Dehkordi, Leila and Zündorf, Albert},
	month = may,
	year = {2020},
	keywords = {Benchmark, Bidirectional transformation, Framework, Model synchronization},
	pages = {647--691},
}
